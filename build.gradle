apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'jacoco'

//mainClassName = 'is.ru.hugb.Client'
mainClassName = 'is.ru.hugb.WebUI'
version '0.1'

repositories {
    jcenter()
}

sourceSets {
  selenium
}

// Dependencies properties
ext.sparkVersion = '2.6.0'
ext.junitVersion = '4.12'
ext.seleniumVersion = '3.6.0'
ext.slf4jVersion = '1.7.9'
ext.handlebarsVersion = '2.5.5'

dependencies {

    // Dependencies
    compile group: 'com.sparkjava', name: 'spark-core', version:sparkVersion
    compile group: 'org.slf4j', name: 'slf4j-simple', version:slf4jVersion
    compile group: 'com.sparkjava', name: 'spark-template-handlebars', version:handlebarsVersion

    // Test dependencies
    testCompile group: 'junit', name: 'junit', version: junitVersion

    // Selenium dependencies
    seleniumCompile group: 'junit', name: 'junit', version: junitVersion
    seleniumCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:seleniumVersion
}

task stage(dependsOn: ['installDist'])

task selenium(type: Test, dependsOn: installDist) {
  testClassesDir = sourceSets.selenium.output.classesDir
  classpath = sourceSets.selenium.runtimeClasspath

  doFirst {
    'build/install/TicTacToe/bin/TicTacToe.bat'.execute()
  }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
